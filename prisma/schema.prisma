// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id String @id @default(cuid())

  googleId String @unique
  email    String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User?
}

model Profile {
  id String @id @default(cuid())

  name              String
  phoneNumber       String    @db.VarChar(15)
  adminAreaLocality String
  cityLocality      String
  address           String?
  avatarUrl         String?
  dateOfBirth       DateTime?
  age               Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User?
}

model User {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accountId String? @unique
  profileId String? @unique

  account     Account?      @relation(fields: [accountId], references: [id])
  profile     Profile?      @relation(fields: [profileId], references: [id])
  Transaction Transaction[]
}

model Book {
  id String @id @default(cuid())

  title       String
  author      String
  publisher   String
  publishYear Int
  buyPrice    Int
  ISBN        String
  language    String

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Transaction Transaction?
}

model PredictionResult {
  id String @id @default(cuid())

  bookId String @unique
  rating BookRating
  price  Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id String @id @default(cuid())

  userId           String
  bookId           String @unique
  finalPrice       Int
  recommendedPrice Int
  status           ProductStatus

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  book Book @relation(fields: [bookId], references: [id])
}

model FrequentlyAskedQuestion {
  id String @id @default(cuid())

  question String
  answer   String? @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PrivacyPolicy {
  id String @id @default(cuid())

  title   String
  content String? @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum BookRating {
  ALL_AGE
  CHILDREN
  TEEN
  ADULT
}

enum ProductStatus {
  OPEN_FOR_SALE
  SOLD_OUT
  DISCONTINUED
}
